{"ast":null,"code":"var _jsxFileName = \"C:\\\\UWO\\\\Summer-Projects\\\\Backend-as-well\\\\beats-maker-app\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Pads from \"./Pads\";\nimport Tasks from \"./Tasks\";\nimport Keyboard from \"./Keyboard\";\nimport React from \"react\";\nimport pads from \"../data\";\n\n// All components family tree is found by the end of this component.\n// Find it by minimizing the Home() function below. \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  // All available instruments and their variations\n  const [hihats1, setHihats1] = React.useState([{\n    label: \"hihat1-open\",\n    value: \"hihat1-open\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat1-closed\",\n    value: \"hihat1-closed\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat1-accent\",\n    value: \"hihat1-accent\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat1-chick\",\n    value: \"hihat1-chick\",\n    type: \"hihat\"\n  }]);\n  const [hihats2, setHihats2] = React.useState([{\n    label: \"hihat2-closed\",\n    value: \"hihat2-closed\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat2-open\",\n    value: \"hihat2-open\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat2-accent\",\n    value: \"hihat2-accent\",\n    type: \"hihat\"\n  }, {\n    label: \"hihat2-chick\",\n    value: \"hihat2-chick\",\n    type: \"hihat\"\n  }]);\n  const [snares, setSnares] = React.useState([{\n    label: \"snare-acoustic\",\n    value: \"snare-acoustic\",\n    type: \"snare\"\n  }, {\n    label: \"snare-power\",\n    value: \"snare-power\",\n    type: \"snare\"\n  }, {\n    label: \"snare-rim\",\n    value: \"snare-rim\",\n    type: \"snare\"\n  }, {\n    label: \"snare-rock\",\n    value: \"snare-rock\",\n    type: \"snare\"\n  }]);\n  const [kicks, setKicks] = React.useState([{\n    label: \"kick-clear\",\n    value: \"kick-clear\",\n    type: \"kick\"\n  }, {\n    label: \"kick-house\",\n    value: \"kick-house\",\n    type: \"kick\"\n  }, {\n    label: \"kick-rifle\",\n    value: \"kick-rifle\",\n    type: \"kick\"\n  }, {\n    label: \"kick-synth\",\n    value: \"kick-synth\",\n    type: \"kick\"\n  }, {\n    label: \"kick-swedish\",\n    value: \"kick-swedish\",\n    type: \"kick\"\n  }]);\n\n  // vars for Tasks.jsx\n  const [isStart, setIsStart] = React.useState(false); // by the start / pause button\n  const [tempo, setTempo] = React.useState(50);\n  const [soundChoices, setSoundChoices] = React.useState({\n    hihat1: hihats1[0].value,\n    hihat2: hihats2[0].value,\n    snare: snares[0].value,\n    kick: kicks[0].value\n  });\n  const updatedSoundChoices = React.useRef(null);\n  updatedSoundChoices.current = soundChoices;\n  const [keyboardChoice, setKeyboardChoice] = React.useState(\"bass\");\n  const [openKeyPositions, setOpenKeyPositions] = React.useState(true);\n  //          --- working with the master volume\n  const audioCtx = React.useRef(new AudioContext(window.AudioContext));\n  const gainNode = React.useRef(audioCtx.current.createGain());\n  React.useEffect(() => {\n    gainNode.current.connect(audioCtx.current.destination);\n  });\n  const [masterVolume, setMasterVolume] = React.useState(0);\n  React.useEffect(() => {\n    gainNode.current.gain.value = masterVolume / 100;\n  }, [masterVolume]);\n\n  //console.log(gainNode.current.gain.value)\n\n  // vars for Pads.jssx\n  const [padsData, setPadsData] = React.useState(pads);\n  const updatedPadsData = React.useRef(null);\n  updatedPadsData.current = padsData;\n  const interval = React.useRef(null);\n  const timeouts = React.useRef([]);\n\n  // --- FUNCTIONS FOR TASKS.JSX\n\n  function toggleStart(e) {\n    e.preventDefault();\n    // 1. change \"start\" to \"pause\" or vise versa\n    setIsStart(prev => !prev);\n  }\n\n  // creating sound objects and play them\n  function makeSound(pad) {\n    const sound = new Audio(`/sounds/${updatedSoundChoices.current[pad.type]}.wav`);\n    const track = audioCtx.createMediaElementSource(sound);\n    track.connect(gainNode);\n    sound.play();\n  }\n  function activate(pad) {\n    // 1. enlarge the pad size\n    setPadsData(prev => prev.map(item => {\n      return item.id === pad.id ? {\n        ...item,\n        scale: 1.2\n      } : item;\n    }));\n\n    // 2. make sound\n    if (pad.on) makeSound(pad);\n\n    // 3. reduce the pad size (after a while)\n    setTimeout(() => {\n      setPadsData(prev => prev.map(item => {\n        return item.id === pad.id ? {\n          ...item,\n          scale: 1\n        } : item;\n      }));\n    }, 250);\n  }\n  function arraySlicer(array) {\n    // expecting a array of 3 by 8 = 24 elements,\n    // slicing them to 3 arrays of 8 elements,\n    // returning an array of the 3 sliced arrays.\n    const arr1 = array.slice(0, 16);\n    const arr2 = array.slice(16, 32);\n    const arr3 = array.slice(32, 48);\n    const arr4 = array.slice(48, 64);\n    return [arr1, arr2, arr3, arr4];\n  }\n\n  // the tempo shown here is purely imaginative.\n  // a medium tempo of 50 represents 200ms of delay.\n\n  const delay = 1000 / (tempo / 10);\n  function looping(array) {\n    // 1. Starting from each of the 3 sliced arrays\n    for (let arr of arraySlicer(array)) {\n      // 2. Looping through each sliced array\n      for (let j of arr) {\n        timeouts.current.push(setTimeout(() => {\n          activate(j);\n        }, arr.indexOf(j) * delay));\n      }\n    }\n  }\n  React.useEffect(() => {\n    if (isStart) {\n      // first function call (no delay)\n      looping(updatedPadsData.current);\n      // second function call (looped with delay)\n      interval.current = setInterval(() => {\n        looping(updatedPadsData.current);\n      }, 16 * delay);\n    } else if (!isStart) {\n      clearInterval(interval.current);\n      for (let i of timeouts.current) {\n        clearTimeout(i);\n      }\n      timeouts.current.length = 0;\n    }\n  }, [isStart]);\n  // ----------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"web-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"action-area\",\n      children: /*#__PURE__*/_jsxDEV(Pads, {\n        padsData: padsData,\n        setPadsData: setPadsData,\n        isStart: isStart,\n        soundChoices: soundChoices,\n        setSoundChoices: setSoundChoices,\n        updatedSoundChoices: updatedSoundChoices.current,\n        makeSound: makeSound\n        // for the instrument choices\n        ,\n        hihats1: hihats1,\n        setHihats1: setHihats1,\n        hihats2: hihats2,\n        setHihats2: setHihats2,\n        snares: snares,\n        setSnares: setSnares,\n        kicks: kicks,\n        setKicksc: setKicks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"task-area\",\n      children: [/*#__PURE__*/_jsxDEV(Keyboard, {\n        keyboardChoice: keyboardChoice,\n        setKeyboardChoice: setKeyboardChoice,\n        openKeyPositions: openKeyPositions,\n        setOpenKeyPositions: setOpenKeyPositions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        padsData: padsData,\n        setPadsData: setPadsData,\n        soundChoices: soundChoices,\n        setSoundChoices: setSoundChoices,\n        toggleStart: toggleStart,\n        tempo: tempo,\n        setTempo: setTempo,\n        isStart: isStart,\n        keyboardChoice: keyboardChoice,\n        setKeyboardChoice: setKeyboardChoice,\n        openKeyPositions: openKeyPositions,\n        setOpenKeyPositions: setOpenKeyPositions,\n        masterVolume: masterVolume,\n        setMasterVolume: setMasterVolume,\n        gainNode: gainNode\n        // for the server\n        ,\n        updatedSoundChoices: updatedSoundChoices.current,\n        updatedPadsData: updatedPadsData.current\n        // for the instrument choices\n        ,\n        hihats1: hihats1,\n        setHihats1: setHihats1,\n        hihats2: hihats2,\n        setHihats2: setHihats2,\n        snares: snares,\n        setSnares: setSnares,\n        kicks: kicks,\n        setKicks: setKicks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n//          All components family tree\n\n//                    Home      Header(independent from Home.jsx)\n//                     |          \n//     Pads ------ Keyboard ------ Tasks\n//      |                            |\n//     Pad         SavingWindow ---------- SampleBeats\n_s(Home, \"6zbdCzDRl29TVripNbKlPqS0/Wo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Pads","Tasks","Keyboard","React","pads","jsxDEV","_jsxDEV","Home","_s","hihats1","setHihats1","useState","label","value","type","hihats2","setHihats2","snares","setSnares","kicks","setKicks","isStart","setIsStart","tempo","setTempo","soundChoices","setSoundChoices","hihat1","hihat2","snare","kick","updatedSoundChoices","useRef","current","keyboardChoice","setKeyboardChoice","openKeyPositions","setOpenKeyPositions","audioCtx","AudioContext","window","gainNode","createGain","useEffect","connect","destination","masterVolume","setMasterVolume","gain","padsData","setPadsData","updatedPadsData","interval","timeouts","toggleStart","e","preventDefault","prev","makeSound","pad","sound","Audio","track","createMediaElementSource","play","activate","map","item","id","scale","on","setTimeout","arraySlicer","array","arr1","slice","arr2","arr3","arr4","delay","looping","arr","j","push","indexOf","setInterval","clearInterval","i","clearTimeout","length","className","children","setKicksc","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UWO/Summer-Projects/Backend-as-well/beats-maker-app/frontend/src/components/Home.jsx"],"sourcesContent":["import Pads from \"./Pads\";\r\nimport Tasks from \"./Tasks\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport React from \"react\";\r\nimport  pads  from \"../data\";\r\n\r\n// All components family tree is found by the end of this component.\r\n// Find it by minimizing the Home() function below. \r\n\r\nexport default function Home() {\r\n  // All available instruments and their variations\r\n  const [hihats1, setHihats1] = React.useState([\r\n    { label: \"hihat1-open\", value: \"hihat1-open\", type: \"hihat\" },\r\n    { label: \"hihat1-closed\", value: \"hihat1-closed\", type: \"hihat\" },\r\n    { label: \"hihat1-accent\", value: \"hihat1-accent\", type: \"hihat\" },\r\n    { label: \"hihat1-chick\", value: \"hihat1-chick\", type: \"hihat\" },\r\n  ]);\r\n  const [hihats2, setHihats2] = React.useState([\r\n    { label: \"hihat2-closed\", value: \"hihat2-closed\", type: \"hihat\" },\r\n    { label: \"hihat2-open\", value: \"hihat2-open\", type: \"hihat\" },\r\n    { label: \"hihat2-accent\", value: \"hihat2-accent\", type: \"hihat\" },\r\n    { label: \"hihat2-chick\", value: \"hihat2-chick\", type: \"hihat\" },\r\n  ]);\r\n  const [snares, setSnares] = React.useState([\r\n    { label: \"snare-acoustic\", value: \"snare-acoustic\", type: \"snare\" },\r\n    { label: \"snare-power\", value: \"snare-power\", type: \"snare\" },\r\n    { label: \"snare-rim\", value: \"snare-rim\", type: \"snare\" },\r\n    { label: \"snare-rock\", value: \"snare-rock\", type: \"snare\" },\r\n  ]);\r\n  const [kicks, setKicks] = React.useState([\r\n    { label: \"kick-clear\", value: \"kick-clear\", type: \"kick\" },\r\n    { label: \"kick-house\", value: \"kick-house\", type: \"kick\" },\r\n    { label: \"kick-rifle\", value: \"kick-rifle\", type: \"kick\" },\r\n    { label: \"kick-synth\", value: \"kick-synth\", type: \"kick\" },\r\n    { label: \"kick-swedish\", value: \"kick-swedish\", type: \"kick\" },\r\n  ]);\r\n\r\n  // vars for Tasks.jsx\r\n  const [isStart, setIsStart] = React.useState(false); // by the start / pause button\r\n  const [tempo, setTempo] = React.useState(50);\r\n  const [soundChoices, setSoundChoices] = React.useState({\r\n    hihat1: hihats1[0].value,\r\n    hihat2: hihats2[0].value,\r\n    snare: snares[0].value,\r\n    kick: kicks[0].value,\r\n  });\r\n  const updatedSoundChoices = React.useRef(null);\r\n  updatedSoundChoices.current = soundChoices;\r\n  const [keyboardChoice, setKeyboardChoice] = React.useState(\"bass\");\r\n  const [openKeyPositions, setOpenKeyPositions] = React.useState(true);\r\n  //          --- working with the master volume\r\n  const audioCtx = React.useRef(new AudioContext(window.AudioContext))\r\n  const gainNode = React.useRef(audioCtx.current.createGain());\r\n  React.useEffect(()=>{\r\n    gainNode.current.connect(audioCtx.current.destination)\r\n  })\r\n  const [masterVolume, setMasterVolume] = React.useState(0)\r\n  React.useEffect(()=>{\r\n    gainNode.current.gain.value =(masterVolume / 100)\r\n  }, [masterVolume])\r\n\r\n  //console.log(gainNode.current.gain.value)\r\n\r\n  // vars for Pads.jssx\r\n  const [padsData, setPadsData] = React.useState(pads);\r\n  const updatedPadsData = React.useRef(null);\r\n  updatedPadsData.current = padsData;\r\n  const interval = React.useRef(null);\r\n  const timeouts = React.useRef([]);\r\n\r\n\r\n  // --- FUNCTIONS FOR TASKS.JSX\r\n\r\n  function toggleStart(e) {\r\n    e.preventDefault();\r\n    // 1. change \"start\" to \"pause\" or vise versa\r\n    setIsStart((prev) => !prev);\r\n  }\r\n\r\n  // creating sound objects and play them\r\n  function makeSound(pad) {\r\n    const sound = new Audio(\r\n      `/sounds/${updatedSoundChoices.current[pad.type]}.wav`\r\n    );\r\n    const track = audioCtx.createMediaElementSource(sound)\r\n    track.connect(gainNode)\r\n    sound.play();\r\n  }\r\n\r\n  function activate(pad) {\r\n    // 1. enlarge the pad size\r\n    setPadsData((prev) =>\r\n      prev.map((item) => {\r\n        return item.id === pad.id ? { ...item, scale: 1.2 } : item;\r\n      })\r\n    );\r\n\r\n    // 2. make sound\r\n    if (pad.on) makeSound(pad);\r\n\r\n    // 3. reduce the pad size (after a while)\r\n    setTimeout(() => {\r\n      setPadsData((prev) =>\r\n        prev.map((item) => {\r\n          return item.id === pad.id ? { ...item, scale: 1 } : item;\r\n        })\r\n      );\r\n    }, 250);\r\n  }\r\n\r\n  function arraySlicer(array) {\r\n    // expecting a array of 3 by 8 = 24 elements,\r\n    // slicing them to 3 arrays of 8 elements,\r\n    // returning an array of the 3 sliced arrays.\r\n    const arr1 = array.slice(0, 16);\r\n    const arr2 = array.slice(16, 32);\r\n    const arr3 = array.slice(32, 48);\r\n    const arr4 = array.slice(48, 64);\r\n    return [arr1, arr2, arr3, arr4];\r\n  }\r\n\r\n  // the tempo shown here is purely imaginative.\r\n  // a medium tempo of 50 represents 200ms of delay.\r\n\r\n  const delay = 1000 / (tempo / 10);\r\n\r\n  function looping(array) {\r\n    // 1. Starting from each of the 3 sliced arrays\r\n    for (let arr of arraySlicer(array)) {\r\n      // 2. Looping through each sliced array\r\n      for (let j of arr) {\r\n        timeouts.current.push(\r\n          setTimeout(() => {\r\n            activate(j);\r\n          }, arr.indexOf(j) * delay)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isStart) {\r\n      // first function call (no delay)\r\n      looping(updatedPadsData.current);\r\n      // second function call (looped with delay)\r\n      interval.current = setInterval(() => {\r\n        looping(updatedPadsData.current);\r\n      }, 16 * delay);\r\n    } else if (!isStart) {\r\n      clearInterval(interval.current);\r\n      for (let i of timeouts.current) {\r\n        clearTimeout(i);\r\n      }\r\n      timeouts.current.length = 0;\r\n    }\r\n  }, [isStart]);\r\n  // ----------------------------------------\r\n\r\n  return (\r\n    <div className=\"web-body\">\r\n      <section className=\"action-area\">\r\n        <Pads\r\n          padsData={padsData}\r\n          setPadsData={setPadsData}\r\n          isStart={isStart}\r\n          soundChoices={soundChoices}\r\n          setSoundChoices={setSoundChoices}\r\n          updatedSoundChoices={updatedSoundChoices.current}\r\n          makeSound={makeSound}\r\n          // for the instrument choices\r\n          hihats1={hihats1}\r\n          setHihats1={setHihats1}\r\n          hihats2={hihats2}\r\n          setHihats2={setHihats2}\r\n          snares={snares}\r\n          setSnares={setSnares}\r\n          kicks={kicks}\r\n          setKicksc={setKicks}\r\n        />\r\n      </section>\r\n      <section className=\"task-area\">\r\n        <Keyboard\r\n          keyboardChoice={keyboardChoice}\r\n          setKeyboardChoice={setKeyboardChoice}\r\n          openKeyPositions={openKeyPositions}\r\n          setOpenKeyPositions={setOpenKeyPositions}\r\n        />\r\n        <Tasks\r\n          padsData={padsData}\r\n          setPadsData={setPadsData}\r\n          soundChoices={soundChoices}\r\n          setSoundChoices={setSoundChoices}\r\n          toggleStart={toggleStart}\r\n          tempo={tempo}\r\n          setTempo={setTempo}\r\n          isStart={isStart}\r\n          keyboardChoice={keyboardChoice}\r\n          setKeyboardChoice={setKeyboardChoice}\r\n          openKeyPositions={openKeyPositions}\r\n          setOpenKeyPositions={setOpenKeyPositions}\r\n          masterVolume = {masterVolume}\r\n          setMasterVolume= {setMasterVolume}\r\n          gainNode = {gainNode}\r\n          // for the server\r\n          updatedSoundChoices={updatedSoundChoices.current}\r\n          updatedPadsData={updatedPadsData.current}\r\n          // for the instrument choices\r\n          hihats1={hihats1}\r\n          setHihats1={setHihats1}\r\n          hihats2={hihats2}\r\n          setHihats2={setHihats2}\r\n          snares={snares}\r\n          setSnares={setSnares}\r\n          kicks={kicks}\r\n          setKicks={setKicks}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n//          All components family tree\r\n\r\n//                    Home      Header(independent from Home.jsx)\r\n//                     |          \r\n//     Pads ------ Keyboard ------ Tasks\r\n//      |                            |\r\n//     Pad         SavingWindow ---------- SampleBeats"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}