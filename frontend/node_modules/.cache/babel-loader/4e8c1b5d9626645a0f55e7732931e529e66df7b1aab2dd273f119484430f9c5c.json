{"ast":null,"code":"var _jsxFileName = \"C:\\\\UWO\\\\Summer-Projects\\\\Backend-as-well\\\\beats-maker-app\\\\frontend\\\\src\\\\components\\\\SampleBeats.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SampleBeats(props) {\n  _s();\n  const [samples, setSamples] = React.useState([]);\n  React.useEffect(() => {\n    // grabbing all samples and store into \"samples\" state\n    async function getSamples() {\n      const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/archive`);\n      const data = await res.json();\n      if (!res.ok) {\n        alert(data.message);\n      }\n      setSamples(data.beats);\n    }\n    getSamples();\n  }, []);\n  function applySample(soundChoices, padsData) {\n    props.setSoundChoices(soundChoices);\n    props.setPadsData(padsData);\n    // close the window \n    props.setIsDisplayingSample(prev => !prev);\n  }\n  const samplesMapped = samples.map((sample, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sample\",\n    onClick: () => applySample(sample.soundChoices, sample.padsData),\n    children: sample.name\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sample-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sample-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setIsDisplayingSample(prev => !prev),\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), samples.length != 0 ? samplesMapped : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sample-loading-text\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SampleBeats, \"k4htahhwzXASnBYcP0d+Er+bpVA=\");\n_c = SampleBeats;\nvar _c;\n$RefreshReg$(_c, \"SampleBeats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SampleBeats","props","_s","samples","setSamples","useState","useEffect","getSamples","res","fetch","process","env","REACT_APP_SERVER_URL","data","json","ok","alert","message","beats","applySample","soundChoices","padsData","setSoundChoices","setPadsData","setIsDisplayingSample","prev","samplesMapped","map","sample","id","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/UWO/Summer-Projects/Backend-as-well/beats-maker-app/frontend/src/components/SampleBeats.jsx"],"sourcesContent":["import React from \"react\";\r\nexport default function SampleBeats(props) {\r\n  const [samples, setSamples] = React.useState([]);\r\n  React.useEffect(() => {\r\n\r\n    // grabbing all samples and store into \"samples\" state\r\n    async function getSamples() {\r\n      const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/archive`);\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        alert(data.message);\r\n      }\r\n      setSamples(data.beats);\r\n    }\r\n    getSamples();\r\n  }, []);\r\n  \r\n  function applySample(soundChoices, padsData) {\r\n    props.setSoundChoices(soundChoices);\r\n    props.setPadsData(padsData);\r\n    // close the window \r\n    props.setIsDisplayingSample(prev=>!prev)\r\n  }\r\n\r\n  const samplesMapped = samples.map((sample, id) => (\r\n    <div\r\n      className=\"sample\"\r\n      key={id}\r\n      onClick={() => applySample(sample.soundChoices, sample.padsData)\r\n        \r\n      }\r\n    >\r\n      {sample.name}\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"sample-container\">\r\n      <div className=\"sample-header\">\r\n        <button onClick={()=>props.setIsDisplayingSample(prev=>!prev)}>&#x2715;</button>\r\n      </div>\r\n      {samples.length != 0 ? samplesMapped : <h2 className=\"sample-loading-text\">Loading...</h2>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAChDR,KAAK,CAACS,SAAS,CAAC,MAAM;IAEpB;IACA,eAAeC,UAAUA,CAAA,EAAG;MAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,UAAU,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACN,GAAG,CAACO,EAAE,EAAE;QACXC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;MACrB;MACAb,UAAU,CAACS,IAAI,CAACK,KAAK,CAAC;IACxB;IACAX,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,SAASY,WAAWA,CAACC,YAAY,EAAEC,QAAQ,EAAE;IAC3CpB,KAAK,CAACqB,eAAe,CAACF,YAAY,CAAC;IACnCnB,KAAK,CAACsB,WAAW,CAACF,QAAQ,CAAC;IAC3B;IACApB,KAAK,CAACuB,qBAAqB,CAACC,IAAI,IAAE,CAACA,IAAI,CAAC;EAC1C;EAEA,MAAMC,aAAa,GAAGvB,OAAO,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,EAAE,kBAC3C9B,OAAA;IACE+B,SAAS,EAAC,QAAQ;IAElBC,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACS,MAAM,CAACR,YAAY,EAAEQ,MAAM,CAACP,QAAQ,CAE9D;IAAAW,QAAA,EAEAJ,MAAM,CAACK;EAAI,GALPJ,EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMJ,CACN,CAAC;EACF,oBACEtC,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAE,QAAA,gBAC/BjC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAE,QAAA,eAC5BjC,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAI9B,KAAK,CAACuB,qBAAqB,CAACC,IAAI,IAAE,CAACA,IAAI,CAAE;QAAAO,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,EACLlC,OAAO,CAACmC,MAAM,IAAI,CAAC,GAAGZ,aAAa,gBAAG3B,OAAA;MAAI+B,SAAS,EAAC,qBAAqB;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEV;AAACnC,EAAA,CA1CuBF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}